/* tslint:disable */
/* eslint-disable */
/**
 * Backend API
 * This API exposes endpoints to manage demo.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vuthase172485@fpt.edu.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InstructionEntity } from './InstructionEntity';
import {
    InstructionEntityFromJSON,
    InstructionEntityFromJSONTyped,
    InstructionEntityToJSON,
} from './InstructionEntity';
import type { Nutrition } from './Nutrition';
import {
    NutritionFromJSON,
    NutritionFromJSONTyped,
    NutritionToJSON,
} from './Nutrition';

/**
 * 
 * @export
 * @interface RecipeEntity
 */
export interface RecipeEntity {
    /**
     * 
     * @type {Date}
     * @memberof RecipeEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RecipeEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof RecipeEntity
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof RecipeEntity
     */
    readyInMinutes?: number;
    /**
     * 
     * @type {number}
     * @memberof RecipeEntity
     */
    servings?: number;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    sourceUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    imageType?: string;
    /**
     * 
     * @type {Nutrition}
     * @memberof RecipeEntity
     */
    nutrition?: Nutrition;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    summary?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecipeEntity
     */
    cuisines?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecipeEntity
     */
    dishTypes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecipeEntity
     */
    diets?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof RecipeEntity
     */
    occasions?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof RecipeEntity
     */
    instructions?: string;
    /**
     * 
     * @type {Array<InstructionEntity>}
     * @memberof RecipeEntity
     */
    analyzedInstructions?: Array<InstructionEntity>;
}

/**
 * Check if a given object implements the RecipeEntity interface.
 */
export function instanceOfRecipeEntity(value: object): value is RecipeEntity {
    return true;
}

export function RecipeEntityFromJSON(json: any): RecipeEntity {
    return RecipeEntityFromJSONTyped(json, false);
}

export function RecipeEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'readyInMinutes': json['readyInMinutes'] == null ? undefined : json['readyInMinutes'],
        'servings': json['servings'] == null ? undefined : json['servings'],
        'sourceUrl': json['sourceUrl'] == null ? undefined : json['sourceUrl'],
        'image': json['image'] == null ? undefined : json['image'],
        'imageType': json['imageType'] == null ? undefined : json['imageType'],
        'nutrition': json['nutrition'] == null ? undefined : NutritionFromJSON(json['nutrition']),
        'summary': json['summary'] == null ? undefined : json['summary'],
        'cuisines': json['cuisines'] == null ? undefined : json['cuisines'],
        'dishTypes': json['dishTypes'] == null ? undefined : json['dishTypes'],
        'diets': json['diets'] == null ? undefined : json['diets'],
        'occasions': json['occasions'] == null ? undefined : json['occasions'],
        'instructions': json['instructions'] == null ? undefined : json['instructions'],
        'analyzedInstructions': json['analyzedInstructions'] == null ? undefined : ((json['analyzedInstructions'] as Array<any>).map(InstructionEntityFromJSON)),
    };
}

export function RecipeEntityToJSON(value?: RecipeEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'title': value['title'],
        'readyInMinutes': value['readyInMinutes'],
        'servings': value['servings'],
        'sourceUrl': value['sourceUrl'],
        'image': value['image'],
        'imageType': value['imageType'],
        'nutrition': NutritionToJSON(value['nutrition']),
        'summary': value['summary'],
        'cuisines': value['cuisines'],
        'dishTypes': value['dishTypes'],
        'diets': value['diets'],
        'occasions': value['occasions'],
        'instructions': value['instructions'],
        'analyzedInstructions': value['analyzedInstructions'] == null ? undefined : ((value['analyzedInstructions'] as Array<any>).map(InstructionEntityToJSON)),
    };
}

