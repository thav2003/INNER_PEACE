/* tslint:disable */
/* eslint-disable */
/**
 * Backend API
 * This API exposes endpoints to manage demo.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: vuthase172485@fpt.edu.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Nutrient } from './Nutrient';
import {
    NutrientFromJSON,
    NutrientFromJSONTyped,
    NutrientToJSON,
} from './Nutrient';

/**
 * 
 * @export
 * @interface IngredientEntity
 */
export interface IngredientEntity {
    /**
     * 
     * @type {Date}
     * @memberof IngredientEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof IngredientEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof IngredientEntity
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof IngredientEntity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof IngredientEntity
     */
    localizedName?: string;
    /**
     * 
     * @type {string}
     * @memberof IngredientEntity
     */
    image?: string;
    /**
     * 
     * @type {number}
     * @memberof IngredientEntity
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof IngredientEntity
     */
    unit?: string;
    /**
     * 
     * @type {Array<Nutrient>}
     * @memberof IngredientEntity
     */
    nutrients?: Array<Nutrient>;
}

/**
 * Check if a given object implements the IngredientEntity interface.
 */
export function instanceOfIngredientEntity(value: object): value is IngredientEntity {
    return true;
}

export function IngredientEntityFromJSON(json: any): IngredientEntity {
    return IngredientEntityFromJSONTyped(json, false);
}

export function IngredientEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): IngredientEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'localizedName': json['localizedName'] == null ? undefined : json['localizedName'],
        'image': json['image'] == null ? undefined : json['image'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'nutrients': json['nutrients'] == null ? undefined : ((json['nutrients'] as Array<any>).map(NutrientFromJSON)),
    };
}

export function IngredientEntityToJSON(value?: IngredientEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
        'name': value['name'],
        'localizedName': value['localizedName'],
        'image': value['image'],
        'amount': value['amount'],
        'unit': value['unit'],
        'nutrients': value['nutrients'] == null ? undefined : ((value['nutrients'] as Array<any>).map(NutrientToJSON)),
    };
}

